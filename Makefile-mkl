# Export MKLROOT in your session to Intel MKL's installation folder. 
# For example:
# export MKLROOT=${HOME}/usr/intel/mkl
MPIF90 = mpifort
# -Warray-temporaries
FCFLAGS = -ffpe-trap=invalid,zero,overflow -Wall -Wextra \
		  -Wno-missing-include-dirs -fimplicit-none -fexternal-blas \
		  -ffree-line-length-none -x f95-cpp-input -flto -c -O3 -m64 \
          -I${MKLROOT}/include -I${MKLROOT}/include/fftw
LDFLAGS = -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gf_lp64 \
          -lmkl_sequential -lmkl_core -lpthread -lm -ldl

# Modules
MODULES = numbers.o\
		  openmpi.o\
		  io.o\
		  parameters.o\
		  fftw.o\
		  diffops.o\
		  symmops.o\
		  test_symmops.o\
		  fieldio.o\
		  vfield.o\
		  rhs.o\
		  timestep.o\
		  stats.o\
		  lyap.o\
		  symred.o\
		  projector.o\
		  run.o\
		  solver.o

# Objects

UTILS 	= utilities/newton.o\
          utilities/eigen.o

# -------------------------------------------------------

all:  $(MODULES) main.o 
	  $(MPIF90) $(MODULES) main.o  -o dns.x $(LDFLAGS)

# -------------------------------------------------------

utils: $(MODULES) $(UTILS)
	   $(MPIF90) $(MODULES) newton.o -o newton.x $(LDFLAGS)
	   $(MPIF90) $(MODULES) eigen.o -o eigen.x $(LDFLAGS)
	   
# -------------------------------------------------------

# compile

# $(OBJ): $(MODULES) 

%.o: %.f
	$(MPIF90) $(FCFLAGS) $<

m_parameters.o: m_parameters.f90
				bash version.sh && $(MPIF90) $(FCFLAGS) $<

%.o: %.f90
	 $(MPIF90) $(FCFLAGS) $<

clean:
	rm *.o *.mod *.x
